[
  {
    "objectID": "content/01_journal/01_tidyverse.html",
    "href": "content/01_journal/01_tidyverse.html",
    "title": "Tidyverse and Challenge 1",
    "section": "",
    "text": "Part 1: Introduction to the Tidyverse Base Code + Results\n\n# Data Science at TUHH ------------------------------------------------------\n# SALES ANALYSIS ----\n\n# 1.0 Load libraries ----\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(writexl)\nlibrary(scales)\nlibrary(ggplot2)\nlibrary(lubridate)\n\n# 2.0 Importing Files ----\n# A good convention is to use the file name and suffix it with tbl for the data structure tibble\nbikes_tbl <- read_excel(\"C:\\\\Users\\\\fvsha\\\\Documents\\\\GitHub\\\\ss23-bdsb-VictorReaver1999\\\\Business_Data_Science\\\\ds_data\\\\01_bike_sales\\\\01_raw_data\\\\bikes.xlsx\")\n\norderlines_tbl <- read_excel(\"C:\\\\Users\\\\fvsha\\\\Documents\\\\GitHub\\\\ss23-bdsb-VictorReaver1999\\\\Business_Data_Science\\\\ds_data\\\\01_bike_sales\\\\01_raw_data\\\\orderlines.xlsx\")\n\n#> New names:\n#> • `` -> `...1`\n\nbikeshops_tbl  <- read_excel(\"C:\\\\Users\\\\fvsha\\\\Documents\\\\GitHub\\\\ss23-bdsb-VictorReaver1999\\\\Business_Data_Science\\\\ds_data\\\\01_bike_sales\\\\01_raw_data\\\\bikeshops.xlsx\")\n\n\n# 3.0 Examining Data ----\nprint(\"bikes_tbl\")\n\n#> [1] \"bikes_tbl\"\n\nbikes_tbl\n\n\n\n  \n\n\nprint(\"orderlines_tbl\")\n\n#> [1] \"orderlines_tbl\"\n\norderlines_tbl\n\n\n\n  \n\n\nprint(\"bikeshops_tbl\")\n\n#> [1] \"bikeshops_tbl\"\n\nbikeshops_tbl\n\n\n\n  \n\n\n# 4.0 Joining Data ----\nleft_join(orderlines_tbl, bikes_tbl, by = c(\"product.id\" = \"bike.id\"))\n\n\n\n  \n\n\nbike_orderlines_joined_tbl <- orderlines_tbl %>%\n  left_join(bikes_tbl, by = c(\"product.id\" = \"bike.id\")) %>%\n  left_join(bikeshops_tbl, by = c(\"customer.id\" = \"bikeshop.id\"))\n\nprint(\"bike orderlines joined tbl\")\n\n#> [1] \"bike orderlines joined tbl\"\n\nglimpse(bike_orderlines_joined_tbl)\n\n#> Rows: 15,644\n#> Columns: 19\n#> $ ...1           <chr> \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\"…\n#> $ order.id       <dbl> 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 5, 5, 5, 5, 6, 6, 6, 6, 7…\n#> $ order.line     <dbl> 1, 2, 1, 2, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 1, 2, 3, 4, 1…\n#> $ order.date     <dttm> 2015-01-07, 2015-01-07, 2015-01-10, 2015-01-10, 2015-0…\n#> $ customer.id    <dbl> 2, 2, 10, 10, 6, 6, 6, 6, 6, 22, 8, 8, 8, 8, 16, 16, 16…\n#> $ product.id     <dbl> 2681, 2411, 2629, 2137, 2367, 1973, 2422, 2655, 2247, 2…\n#> $ quantity       <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1…\n#> $ model          <chr> \"Spectral CF 7 WMN\", \"Ultimate CF SLX Disc 8.0 ETAP\", \"…\n#> $ model.year     <dbl> 2021, 2020, 2021, 2019, 2020, 2020, 2020, 2021, 2020, 2…\n#> $ frame.material <chr> \"carbon\", \"carbon\", \"carbon\", \"carbon\", \"aluminium\", \"c…\n#> $ weight         <dbl> 13.80, 7.44, 14.06, 8.80, 11.50, 8.80, 8.20, 8.85, 14.4…\n#> $ price          <dbl> 3119, 5359, 2729, 1749, 1219, 1359, 2529, 1559, 3899, 6…\n#> $ category       <chr> \"Mountain - Trail - Spectral\", \"Road - Race - Ultimate\"…\n#> $ gender         <chr> \"female\", \"unisex\", \"unisex\", \"unisex\", \"unisex\", \"unis…\n#> $ url            <chr> \"https://www.canyon.com/en-de/mountain-bikes/trail-bike…\n#> $ name           <chr> \"AlexandeRad\", \"AlexandeRad\", \"WITT-RAD\", \"WITT-RAD\", \"…\n#> $ location       <chr> \"Hamburg, Hamburg\", \"Hamburg, Hamburg\", \"Bremen, Bremen…\n#> $ lat            <dbl> 53.57532, 53.57532, 53.07379, 53.07379, 48.78234, 48.78…\n#> $ lng            <dbl> 10.015340, 10.015340, 8.826754, 8.826754, 9.180819, 9.1…\n\n# 5.0 Wrangling Data ----\nprint(\"bike orderlines joined category col, first 20 rows\")\n\n#> [1] \"bike orderlines joined category col, first 20 rows\"\n\nhead(bike_orderlines_joined_tbl$category, n=20)\n\n#>  [1] \"Mountain - Trail - Spectral\"           \n#>  [2] \"Road - Race - Ultimate\"                \n#>  [3] \"Mountain - Trail - Neuron\"             \n#>  [4] \"Road - Triathlon Bike - Speedmax\"      \n#>  [5] \"Mountain - Dirt Jump - Stitched\"       \n#>  [6] \"Hybrid / City - City - Roadlite\"       \n#>  [7] \"Road - Triathlon Bike - Speedmax\"      \n#>  [8] \"Road - Cyclocross - Inflite\"           \n#>  [9] \"Mountain - Enduro - Torque\"            \n#> [10] \"Road - Race - Ultimate\"                \n#> [11] \"E-Bikes - E-Mountain - Grand Canyon:ON\"\n#> [12] \"Road - Race - Ultimate\"                \n#> [13] \"Gravel - All-Road - Grail\"             \n#> [14] \"Mountain - Enduro - Torque\"            \n#> [15] \"Gravel - All-Road - Grail\"             \n#> [16] \"Road - Endurance - Endurace\"           \n#> [17] \"E-Bikes - E-City - Commuter:ON\"        \n#> [18] \"Road - Triathlon Bike - Speedmax\"      \n#> [19] \"Mountain - Trail - Grand Canyon\"       \n#> [20] \"Gravel - All-Road - Grail\"\n\n# All actions are chained with the pipe already. You can perform each step separately and use glimpse() or View() to validate your code. Store the result in a variable at the end of the steps.\nbike_orderlines_wrangled_tbl <- bike_orderlines_joined_tbl %>%\n  # 5.1 Separate category name\n  separate(col    = category,\n           into   = c(\"category.1\", \"category.2\", \"category.3\"),\n           sep    = \" - \") %>%\n\n  # 5.2 Add the total price (price * quantity)\n  # Add a column to a tibble that uses a formula-style calculation of other columns\n  mutate(total.price = price * quantity) %>%\n\n  # 5.3 Optional: Reorganize. Using select to grab or remove unnecessary columns\n  # 5.3.1 by exact column name\n  select(-...1, -gender) %>%\n\n  # 5.3.2 by a pattern\n  # You can use the select_helpers to define patterns.\n  # Type ?ends_with and click on Select helpers in the documentation\n  select(-ends_with(\".id\")) %>%\n\n  # 5.3.3 Actually we need the column \"order.id\". Let's bind it back to the data\n  bind_cols(bike_orderlines_joined_tbl %>% select(order.id)) %>%\n\n  # 5.3.4 You can reorder the data by selecting the columns in your desired order.\n  # You can use select_helpers like contains() or everything()\n  select(order.id, contains(\"order\"), contains(\"model\"), contains(\"category\"),\n         price, quantity, total.price,\n         everything()) %>%\n\n  # 5.4 Rename columns because we actually wanted underscores instead of the dots\n  # (one at the time vs. multiple at once)\n  rename(bikeshop = name) %>%\n  set_names(names(.) %>% str_replace_all(\"\\\\.\", \"_\"))\n\nprint(\"Bike OrderLines Wrangled Table\")\n\n#> [1] \"Bike OrderLines Wrangled Table\"\n\nhead(bike_orderlines_wrangled_tbl, n=10)\n\n\n\n  \n\n\n# 6.0 Business Insights ----\n# 6.1 Sales by Year ----\n\nlibrary(lubridate)\n# Step 1 - Manipulate\nsales_by_year_tbl <- bike_orderlines_wrangled_tbl %>%\n\n  # Select columns\n  select(order_date, total_price) %>%\n\n  # Add year column\n  mutate(year = year(order_date)) %>%\n\n  # Grouping by year and summarizing sales\n  group_by(year) %>%\n  summarize(sales = sum(total_price)) %>%\n\n  # Optional: Add a column that turns the numbers into a currency format\n  # (makes it in the plot optically more appealing)\n  # mutate(sales_text = scales::dollar(sales)) <- Works for dollar values\n  mutate(sales_text = scales::dollar(sales, big.mark = \".\",\n                                     decimal.mark = \",\",\n                                     prefix = \"\",\n                                     suffix = \" €\"))\n\nprint(\"Sales By Year Table\")\n\n#> [1] \"Sales By Year Table\"\n\nsales_by_year_tbl\n\n\n\n  \n\n\n# Step 2 - Visualize\n\nsales_by_year_tbl %>%\n\n  # Setup canvas with the columns year (x-axis) and sales (y-axis)\n  ggplot(aes(x = year, y = sales)) +\n\n  # Geometries\n  geom_col(fill = \"#2DC6D6\") + # Use geom_col for a bar plot\n  geom_label(aes(label = sales_text)) + # Adding labels to the bars\n  geom_smooth(method = \"lm\", se = FALSE) + # Adding a trendline\n\n  # Formatting\n  # scale_y_continuous(labels = scales::dollar) + # Change the y-axis.\n  # Again, we have to adjust it for euro values\n  scale_y_continuous(labels = scales::dollar_format(big.mark = \".\",\n                                                    decimal.mark = \",\",\n                                                    prefix = \"\",\n                                                    suffix = \" €\")) +\n  labs(\n    title    = \"Revenue by year\",\n    subtitle = \"Upward Trend\",\n    x = \"\", # Override defaults for x and y\n    y = \"Revenue\"\n  )\n\n#> `geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\nggsave(\"sales_by_year_plot.png\", width = 10, height = 8, dpi = 300)\n\n#> `geom_smooth()` using formula = 'y ~ x'\n\n# 6.2 Sales by Year and Category 2 ----\n\n# Step 1 - Manipulate\nsales_by_year_cat_1_tbl <- bike_orderlines_wrangled_tbl %>%\n\n  # Select columns and add a year\n  select(order_date, total_price, category_1) %>%\n  mutate(year = year(order_date)) %>%\n\n  # Group by and summarize year and main catgegory\n  group_by(year, category_1) %>%\n  summarise(sales = sum(total_price)) %>%\n  ungroup() %>%\n\n  # Format $ Text\n  mutate(sales_text = scales::dollar(sales, big.mark = \".\",\n                                     decimal.mark = \",\",\n                                     prefix = \"\",\n                                     suffix = \" €\"))\n\n#> `summarise()` has grouped output by 'year'. You can override using the\n#> `.groups` argument.\n\nprint(\"Sales By Year Category1 Table\")\n\n#> [1] \"Sales By Year Category1 Table\"\n\nsales_by_year_cat_1_tbl\n\n\n\n  \n\n\n# Step 2 - Visualize\nsales_by_year_cat_1_tbl %>%\n\n  # Set up x, y, fill\n  ggplot(aes(x = year, y = sales, fill = category_1)) +\n\n  # Geometries\n  geom_col() + # Run up to here to get a stacked bar plot\n\n  # Facet\n  facet_wrap(~ category_1) +\n\n  # Formatting\n  scale_y_continuous(labels = scales::dollar_format(big.mark = \".\",\n                                                    decimal.mark = \",\",\n                                                    prefix = \"\",\n                                                    suffix = \" €\")) +\n  labs(\n    title = \"Revenue by year and main category\",\n    subtitle = \"Each product category has an upward trend\",\n    fill = \"Main category\" # Changes the legend name\n  )\n\n\n\n\n\n\nggsave(\"revenue_by_year_and_category.png\", width = 10, height = 8, dpi = 300)\n\n\n# 7.0 Writing Files ----\n\n# 7.1 Excel ----\n\nbike_orderlines_wrangled_tbl %>%\n  write_xlsx(\"C:\\\\Users\\\\fvsha\\\\Documents\\\\GitHub\\\\ss23-bdsb-VictorReaver1999\\\\Business_Data_Science\\\\ds_data\\\\01_bike_sales\\\\02_wrangled_data\\\\bike_orderlines.xlsx\")\n\n# # 7.2 CSV ----\nbike_orderlines_wrangled_tbl %>%\n  write_csv(\"C:\\\\Users\\\\fvsha\\\\Documents\\\\GitHub\\\\ss23-bdsb-VictorReaver1999\\\\Business_Data_Science\\\\ds_data\\\\01_bike_sales\\\\02_wrangled_data\\\\bike_orderlines.csv\")\n\n# # 7.3 RDS ----\nbike_orderlines_wrangled_tbl %>%\n  write_rds(\"C:\\\\Users\\\\fvsha\\\\Documents\\\\GitHub\\\\ss23-bdsb-VictorReaver1999\\\\Business_Data_Science\\\\ds_data\\\\01_bike_sales\\\\02_wrangled_data\\\\bike_orderlines.rds\")\n\nThis is the base code of the Tidyverse section of this course. The steps are as follows: a) Load libraries b) Load the raw data c) Examine data d) Join data as per the instructions e) Wrangle it in order to prepare it for analysis f) Extract business insights through visualization g) Store the wrangled data as xlsx, csv, and rds files\nPart F is the most interesting bit here since this is the ultimate goal of any Data Analysis project which is extracting insights and telling a story\nThe results of the first visualization are shown below which shows the trend line of the sales by year analysis. What we can tell is that the trend line is positive and that sales continously rose from 2016 to 2019 barring the year 2018  The results of the second visualization are shown below which shows the revenue by year and by category simultaneously. We can see that Road and Mountain bikes are best sellers regardless of year and that demand for them is always high\n Part 2:\nThis next part is the challenge from the tidyverse chapter. The first part of the challenge is as follows:\nAnalyze the sales by location (state) with a bar plot. Since state and city are multiple features (variables), they should be split. Which state has the highes revenue? Replace your bike_orderlines_wrangled_tbl object with the newly wrangled object (with the columns state and city).\nHint: Add + theme(axis.text.x = element_text(angle = 45, hjust = 1)) to your plotting code to rotate your x-axis labels. Probably you have to resize the viewer pane to show the entire plot. For your website, try different values for fig.width and fig.height in your markdown document.\n\n# 8.0 Challenge #1 \n\n# Challenge Part 1\nbike_orderlines_wrangled2_tbl <- bike_orderlines_joined_tbl %>%\n  separate(location, into = c(\"city\", \"state\"), sep = \", \") %>%\n  group_by(state) %>%\n  summarize(total_revenue = sum(price * quantity)) %>%\n  arrange(desc(total_revenue)) %>%\n  ggplot(aes(x = state, y = total_revenue)) +\n  geom_bar(stat = \"identity\", fill = \"#0072B2\") +\n  xlab(\"State\") +\n  ylab(\"Total Revenue\") +\n  ggtitle(\"Total Revenue by State\") +\n  scale_y_continuous(labels = comma) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n# print(\"bike_orderlines_wrangled2_tbl\")\n# head(bike_orderlines_wrangled2_tbl, n=10)\n\nggsave(\"sales_by_state.png\", width = 10, height = 8, dpi = 300)\n\nThe results of that challenge are seen below. We split the location by city and state and then grouped all the sales data by state. The state that sold the most bikes is North Rhine Westphalia.\nThis could be caused by the presence of mountains and hills in North Rhine-Westphalia. The highest mountain in the state is the Langenberg, which is part of the Rothaar Mountains and has an elevation of 843 meters (2,766 feet). The Sauerland region, located in the eastern part of North Rhine-Westphalia, is also known for its hilly terrain and scenic landscapes. Additionally, there are several other smaller mountain ranges in the state, including the Ebbegebirge, the Wiehengebirge, and the Teutoburg Forest.\n\n\nTotal Revenue by State\n\n\nThe second and last part of the tidy verse challenge is as follows:\nAnalyze the sales by location and year (facet_wrap). Because there are 12 states with bike stores, you should get 12 plots\nThe code is below. I folloed\n\n# Challenge Part 2\n# Group the data by location (state) and year, and calculate the total revenue\nbike_orderlines_wrangled3_tbl <- bike_orderlines_joined_tbl %>%\n  separate(location, into = c(\"city\", \"state\"), sep = \", \") %>%\n  mutate(year = year(order.date)) %>%\n  mutate(revenue = quantity * price) %>%\n  group_by(state, year) %>%\n  summarise(total_revenue = sum(revenue))\n\n#> `summarise()` has grouped output by 'state'. You can override using the\n#> `.groups` argument.\n\n# Plot the data using facet_wrap\nggplot(bike_orderlines_wrangled3_tbl, aes(x = year, y = total_revenue)) +\n  geom_col() +\n  labs(x = \"Year\", y = \"Total Revenue\") +\n  facet_wrap(~ state, ncol = 4) +\n  scale_y_continuous(labels = comma) +\n  theme(plot.title = element_text(hjust = 0.5)) +\n  ggtitle(\"Sales by Location and Year\")\n\n\n\n\n\n\n# Save the plot as a PNG file\nggsave(\"sales_by_location_and_year.png\", dpi = 300)\n\n#> Saving 7 x 5 in image\n\n\nThe results are below:\n\n\nSales by Location and Year\n\n\nThis image shows that aggregated annual sales in North Rhine Westphalia are dominant whe compared to other states for reasons outlined earlier.\nThis marks the end of the Tidyverse Chapter and Challenge."
  },
  {
    "objectID": "content/01_journal/02_data_acquisition.html",
    "href": "content/01_journal/02_data_acquisition.html",
    "title": "Data Acquisition",
    "section": "",
    "text": "Challenge 1\nGet some data via an API. There are millions of providers, that offer API access for free and have good documentation about how to query their service. You just have to google them. You can use whatever service you want. For example, you can get data about your listening history (spotify), get data about flights (skyscanner) or just check the weather forecast. Print the data in a readable format, e.g. a table if you want, you could also plot it\nFor this challenge, I decided to obtain netflix movie data. I replaced all missing ratings with N/A. I kept it simple to 4 columns: title, year, rating, synopsis\n\n# load the libraries\nlibrary(httr)\nlibrary(jsonlite)\nlibrary(lubridate)\nlibrary(knitr)\nlibrary(markdown)\n\n#specify the url and what we are accessing\nurl <- \"https://unogs-unogs-v1.p.rapidapi.com/search/titles\"\n\nqueryString <- list(\n  order_by = \"date\",\n  type = \"movie\"\n)\n\n# retrieve the API Key\napi_key = Sys.getenv(\"X-RapidAPI-Key\")\n\n# Get the response as a JSON output\nresponse <- VERB(\"GET\", url, query = queryString, add_headers('X-RapidAPI-Key' = api_key, 'X-RapidAPI-Host' = 'unogs-unogs-v1.p.rapidapi.com'), content_type(\"application/octet-stream\"))\n\n# Convert that JSON response to a list\nresponse_list <- fromJSON(content(response, \"text\"))\n\n# Convert extract the dataframe of results we want\nmovies_df <- response_list[[2]]\n\n# Filter the dataframe\nmovies_df <- movies_df[, c(\"title\", \"year\", \"rating\", \"synopsis\")]\n\n# Replace empty ratings with N/A\nmovies_df$rating <- ifelse(is.na(movies_df$rating), \"N/A\", movies_df$rating)\nmovies_df$rating[movies_df$rating == \"\"] <- \"N/A\"\n\n# create a table with kable\nmovies_table <- kable(movies_df, format = \"markdown\", booktabs = TRUE, align = \"c\", col.names = toupper(colnames(movies_df)), space = \"small\")\n\n# Display the Table\nmovies_table\n\n\n\n\n\n\n\n\n\nTITLE\nYEAR\nRATING\nSYNOPSIS\n\n\n\nThe Sky Above Paris\n1991\nN/A\nHeartbroken Suzanne has sworn off men — until she meets Lucien. But she’s unaware her best friend Marc has also fallen in love with her new flame.\n\n\nThiruvin Kural\n2023\nN/A\nA man with hearing and speech disabilities is drawn into danger when a ruthless gang starts targeting his injured father at a hospital.\n\n\nMrs. Chatterjee vs Norway\n2023\n7.4\nAn immigrant mother from India embarks on a fierce custody battle when Norwegian authorities take her children away from her. Based on a true story.\n\n\nRoyalteen: Princess Margrethe\n2023\n0\nIn the wake of her prom scandal, Princess Margrethe longs for normalcy as she struggles to maintain her perfect facade while dealing with family drama.\n\n\n¡Que viva México!\n2023\nN/A\nAfter his miner grandfather's death, Pancho travels with his wife and kids to his hometown, where chaos ensues with his relatives over the inheritance.\n\n\nTravelling thru time!\n2022\nN/A\nFive young friends embark on a journey of adventure and magic in a quest to stop a villainous tycoon from making their parents work day and night.\n\n\nBros\n2022\n6.3\nA prickly podcaster surprises himself when he meets a man who might be his perfect match — if only they can both get over their hang-ups about romance.\n\n\nBig Dreams\n2022\n8.9\nEnergized by the Czech Republic's 1998 Olympic hockey victory, an 11-year-old dreamer and his pals form a team to take on rivals from a nearby village.\n\n\nOne Night Stand\n2021\n5.9\nA young man's trip to attend a funeral and a wedding on the same day leads to a journey of self-discovery when he's captivated by a chance encounter.\n\n\nJakarta vs Everybody\n2020\nN/A\nOne man's dream to become an actor leads him to the big city of Jakarta — but the path to stardom isn't as easy as he originally thought.\n\n\nAum!\n2021\n0\nA group of Indonesian activists discreetly fight for reform while under the rule and watchful eye of oppressive authorities.\n\n\nYou & Me & Me\n2023\n7.7\nTwin sisters You and Me share an intimate bond like no other — until a charming teenager named Mark abruptly enters their lives.\n\n\nArini by Love.inc\n2022\n0\nAfter dedicating years of service at a matchmaking company, Arini tries to piece together her mysterious past — and memories of a former client.\n\n\nSoul Snatcher\n2020\n5.3\nIn search of a divine pill to achieve immortality, a wily fox spirit travels to the human world, where he befriends an innocent scholar.\n\n\nDie Känguru-Chroniken\n2020\nN/A\nA musician's life turns upside down when a talking kangaroo with communist leanings moves into his apartment and sparks his awakening as an activist.\n\n\nThe Unborn Soul\n2023\nN/A\nWhen a family secret comes back to haunt an expectant mother, she must face her past as her unborn child is put at risk.\n\n\nBrigade Anti-Gangs\n1966\nN/A\nAfter a task force manages to arrest a notorious gang's boss, its members kidnap the head inspector’s brother in order to obtain their leader’s freedom.\n\n\nHero\n2022\n7.9\nFamily man turned freedom fighter An Jung-geun vows to assassinate resident-general Ito Hirobumi and liberate occupied Korea in this musical drama.\n\n\nHannah Gadsby: Something Special\n2023\n0\nA panicky proposal. A novelty wedding cake. A fateful bunny encounter. Hannah Gadsby shares tales of love and marriage in this feel-good comedy special.\n\n\nThe Subtle Art of Not Giving a F*ck\n2023\n6\nAuthor Mark Manson explores the human condition and his counterintuitive approach to finding true joy in this documentary based on his bestselling book.\n\n\nThe Tunnel Gang\n2016\nN/A\nAfter being trapped in a tunnel for days, a colorful group of survivors strikes up a unique friendship and soon land in awkward and hilarious situations.\n\n\nShooters\n2000\n5.4\nIn this docudrama, non-professionals with criminal backgrounds re-enact ad-libbed scenes of life in Liverpool's underworld.\n\n\nSuperwho?\n2021\n6.1\nAfter losing his memory in an accident, a struggling actor becomes convinced he's a superhero on an important mission.\n\n\nThe Pororo Movie: Adventures in The Magical Kingdom\n2023\nN/A\nPororo and his pals discover a cursed prince stuck as a wooden doll and set off to help him reclaim his kingdom from the evil duke who cast the spell.\n\n\nThe Marriage Escape\n2020\n7.5\nFeeling constrained by his wife of 35 years, an aging veterinarian devises an odd scheme to get away and enjoy some time to himself.\n\n\nVoices of the New Gen\n2022\nN/A\nFour emerging filmmakers present a collection of gritty short crime dramas and thrillers that reflect Thailand’s social issues and politics.\n\n\nProject Wolf Hunting\n2022\n6.1\nA cargo ship transporting a group of hostile inmates from the Philippines to South Korea erupts into chaos when they join forces to hijack the vessel.\n\n\nPreuve d'amour\n1988\nN/A\nAfter meeting a beautiful and enigmatic woman on a train, a journalist becomes a suspect in a murder and embarks on a dangerous search for the truth.\n\n\nForget Me\n1994\n6.6\nHung up on an ex who's moved on, 20-something Nathalie creates chaos and heartbreak for herself and the people around her as she searches for love.\n\n\nHow to Keep the Red Lamp Burning\n1965\n6.5\nWhen a brothel owner gives his telltale red lantern to his top earner, the story of the gift is revealed through the tales of its various keepers.\n\n\nWrong Place\n2022\n3.6\nA drug kingpin makes a mistake with violent consequences when he threatens the daughter of the former police chief set to testify against him.\n\n\nThe Order of Things\n2022\n6.4\nWhen family tradition dictates that his big brother must get married first, a frustrated fiancé gives his shy, perennially single sibling a makeover.\n\n\nAY: Spotting the Difference\n2023\nN/A\nIn his eclectic debut special, Ayo “AY” Makun hilariously holds forth on eccentric pastors, media bias and the untold wonders of medical payment plans.\n\n\nKaiserschmarrndrama\n2021\n6.9\nA dicey murder investigation. A fuming best friend. A chaotic living situation. Village police officer Franz Eberhofer has a lot on his plate right now.\n\n\nPerched on a Tree\n1970\nN/A\nAn industrialist takes a chance when he reluctantly picks up two hitchhikers. But, after a wrong turn, they all go out on a limb — literally.\n\n\nThelma\n2011\n7\nThelma has an uncanny gift for speed. But to become an athlete, she must navigate a labyrinth of challenges stacked against her and her family.\n\n\nDeadly Love Poem\n2022\nN/A\nWords of poetry spell certain death when a young woman grows increasingly distraught after a string of unusual murders take place.\n\n\nCall Me Miles\n2022\nN/A\nThis candid documentary follows an Afrikaans teen on their trans journey as they face self-hate, societal rejection and doubt on a path to healing.\n\n\nRowdy Fellow\n2014\n6.4\nAfter clashing with an officer, a man joins the police force out of spite. In his new post, he takes on a corrupt and powerful local politician.\n\n\nThammudu\n1999\n7.9\nThe banished son of a respectable family gets the chance to redeem himself when he takes his injured brother's place in a kickboxing tournament.\n\n\nThree (Telugu)\n2012\nN/A\nAfter her husband’s unnatural death, a young widow in search of answers discovers a secret diagnosis and a world of hidden suffering and sacrifice.\n\n\nYogi\n2007\n4.5\nEager to earn money for his widowed mother, a devoted son heads to the big city where a violent encounter turns him into a vigilante bent on justice.\n\n\nAmrutham Chandamamalo\n2014\nN/A\nWhen the opportunity arises to colonize the moon — and expand their business — self-made billionaires Amrutham and Anji become unwitting adventurers.\n\n\nCoplan Saves His Skin\n1968\nN/A\nAn undercover agent faces killer goons, a strange sculptor and a mysterious doppelgänger when a murder investigation reveals a scheme to end humanity.\n\n\nMeter\n2023\n9\nAfter a reluctant cop is promoted, he attempts to sabotage his own rise — until an unexpected clash with a corrupt politician forces a change of heart.\n\n\nArmageddon Time\n2022\n6.5\nA Jewish boy's friendship with his Black classmate reveals sobering truths about race and privilege in this coming-of-age tale set in 1980 New York City.\n\n\nKatinka\n2022\n0\nSwimming champion Katinka Hosszú faces challenges and setbacks in and out of the water during her preparations for the 2020 Tokyo Olympics.\n\n\nWelcome Home, Bro!\n2022\nN/A\nWhen a woman returns home with her writer fiancé, her parents become convinced that he'll write a book about them. Then a family secret surfaces.\n\n\nThe Point Men\n2023\n4.3\nA diplomat and a National Intelligence Service agent launch a mission to rescue Korean tourists held hostage by the Taliban. Based on true events.\n\n\nSumodo - The Successors of Samurai\n2020\nN/A\nTwo elite wrestlers from rival stables train for combat in this visceral documentary that goes inside the rigorous sport of sumo wrestling.\n\n\nRomina, My Life\n2023\nN/A\nA young woman's summer brims with romantic complications when a new connection with a visiting musician stirs up feelings for a former flame.\n\n\nTu Jhoothi Main Makkaar\n2023\n6.7\nTo earn extra cash, Mickey helps couples break up — but life gets complicated when he falls for Tinni, a career woman with an independent streak.\n\n\nHope\n2020\n8.2\nWhen a missing student becomes a suspect in his classmate's murder, his family is torn between hoping he's innocent and hoping he's still alive.\n\n\nTwo Hearts\n2022\n6.6\nOn the cusp of a life-changing meeting, a musically talented woman must track down her notebook of lyrics from the rap star she thinks possesses it.\n\n\n23 Walks\n2021\n5.9\nAfter a chance encounter at a dog park, two Londoners discover the possibilities — and challenges — of late life romance.\n\n\nWho Mislaid My Wife?\n1976\nN/A\nAfter finding a stranger in his home, a well-respected lawyer becomes obsessed with the idea that his wife is having an affair.\n\n\nFirst Voyage\n1980\n4.4\nAfter their mother’s death, a teen girl and her 5-year-old brother embark on an emotional journey to find the father who abandoned them years before.\n\n\nBlood Quantum\n2019\n5.6\nA troubled sheriff struggles to protect his Indigenous community as nonimmune outsiders seek refuge from a rising undead horde.\n\n\nTyler Perry's The Family That Preys\n2008\n3.5\nWealthy socialite Charlotte and working-class Alice find their families at risk of being ripped apart by greed and scandal.\n\n\nSoft & Quiet\n2022\n7.4\nPlaying out in real time, a schoolteacher's mixer with like-minded women sparks a volatile chain of events when she encounters a face from her past.\n\n\nThe Midnight Maiden War\n2022\nN/A\nA lonely outsider finds meaning — and first love — as part of a cryptic college club that organizes increasingly dangerous and destructive explosions.\n\n\nCity Hunter\n2018\n6.3\nAn elite bodyguard and notorious ladies' man must guard a perfume so potent it makes the wearer utterly irresistible to those who smell it.\n\n\nSpellbound\n2023\n7.5\nYuri's world is in shambles after a tragic incident leaves her constantly haunted by ghosts — until a charming magician enters her life.\n\n\nRepulse\n2021\n0\nTwo very different yet equally dysfunctional families — one affluent, one destitute — share a grim, destructive bond forged in pain, trauma and abuse.\n\n\nAlberto Tomba: vincere in salita\n2023\nN/A\nThe iconic alpine ski racer reflects on his childhood in Emilia-Romagna, his triumphs in international competitions and his life beyond the slopes.\n\n\nThe Tribe\n1991\n7\nWhile in the emergency room, a young doctor witnesses a shocking death that leads him down a rabbit hole of sinister politics and reckless corruption.\n\n\nThe Winner\n1979\n6.2\nWhen a young plumber meets the woman of his dreams, the only obstacle is her family — and her fiancé. But the tables turn after he wins the lottery.\n\n\nTwo of a Kind: A Love Story\n1981\nN/A\nLove blossoms between two misfits when a bookstore owner discovers the gentle side of a famously fearsome wrestler who literally lands in her lap.\n\n\nAlways Alone\n1991\nN/A\nProdigal son Rudi returns home from prison to make life even more chaotic for his dozen family members sharing a tiny, hopelessly cramped apartment.\n\n\nV for Vengeance\n2022\n3.7\nTwo estranged vampire sisters join forces to rescue their long-lost sibling and take down the bloodthirsty clan that murdered their parents.\n\n\nHoping for Good News\n2022\nN/A\nWhen an ex-girlfriend’s threat forces him to flee his own engagement party, Bulut embarks on a chaotic road adventure — with the police in hot pursuit.\n\n\nCrawlspace\n2022\n5.3\nAfter a plumber witnesses two poachers commit a brutal murder in a remote Oregon cabin, he finds himself fighting for his own life.\n\n\nMrs. Harris Goes to Paris\n2022\n7.1\nDreaming of buying a Dior gown, an irrepressible London house cleaner brightens the lives of those around her on a life-changing Parisian vacation.\n\n\nID2: Shadwell Army\n2016\n4.6\nIn this follow-up to the 1995 football hooligan film, a cop goes undercover to infiltrate a violent gang associated with a London football club.\n\n\nMuoi: The Curse Returns\n2022\n0\nAn art curator reunites with an old friend at an isolated villa, where they discover a cursed portrait concealing a malevolent spirit.\n\n\nBoy from the Blaze\n2020\nN/A\nAfter surviving a horrific fire, teen Aleixo Paz grapples with pain through his songwriting. In this documentary, he takes the stage for the first time.\n\n\n4EVE The 1st Concert Friends & Family\n2022\nN/A\nGirl group 4EVE takes the stage at a packed Queen Sirikit National Convention Center in Bangkok for their first concert in front of adoring fans.\n\n\nOK Jaanu\n2017\n5.2\nA marriage-averse duo decides to cohabitate until their careers send them to different countries. The plan seems logical — until real love develops.\n\n\nBadrinath Ki Dulhania\n2017\nN/A\nThe entitled son of a wealthy patriarch pursues a driven young woman, but is in for a powerful lesson when she challenges his assumptions about marriage.\n\n\nAe Dil Hai Mushkil\n2016\n5.8\nAfter crossing paths as students in London, Ayan and Alizeh navigate a journey of friendship, love and heartbreak that turns their worlds upside down.\n\n\nAKA\n2023\n6.3\nA steely special ops agent finds his morality put to the test when he infiltrates a crime syndicate and unexpectedly bonds with the boss' young son.\n\n\nPretty Young Thing\n2022\n0\nFrida and Selma navigate the intricate initiation rites at their new high school, where being invited to a notorious party means instant popularity.\n\n\nBefore Life After Death\n2022\n9.2\nWith nowhere to turn, a pregnant student finds refuge and companionship with a gynecologist, who is mourning the death of her only daughter.\n\n\nIt's Us\n2013\n7.3\nWhen rumors and stereotypes dangerously disrupt a harmonious Kenyan community, residents must decide whether to succumb to turmoil — or rise above it.\n\n\nGuy\n2019\n6.7\nDiscovering that he's the illegitimate son of a famed singer, a young reporter follows his father on tour without revealing his true identity.\n\n\nThe Awkward Weekend\n2023\nN/A\nA weekend devoted to honoring their deceased friend takes an awkward turn when a surprise guest puts a once tight-knit group at odds with each other.\n\n\nThe Matchmaker\n2023\n6.5\nWhen an office worker becomes powerfully infatuated with his beautiful intern, he follows her to a desert resort overrun with bizarre forces.\n\n\nTha Rae United\n2022\nN/A\nA teen football club just can't seem to win, until a former national player joins the lineup and teaches them how to put their heart into the game.\n\n\nLike & Share\n2022\n8.2\nTwo best friends who create ASMR content together discover a world of personal exploration that leads them both toward harrowing outcomes.\n\n\nDasara (Kannada)\n2023\nN/A\nAmid the daily grind in a coal mining town, politics and power dynamics take a dangerous toll on a love triangle between three longtime friends.\n\n\nDasara (Malayalam)\n2023\nN/A\nAmid the daily grind in a coal mining town, politics and power dynamics take a dangerous toll on a love triangle between three longtime friends.\n\n\nDasara (Tamil)\n2023\nN/A\nAmid the daily grind in a coal mining town, politics and power dynamics take a dangerous toll on a love triangle between three longtime friends.\n\n\nDasara\n2023\n7.5\nAmid the daily grind in a coal mining town, politics and power dynamics take a dangerous toll on a love triangle between three longtime friends.\n\n\nPaws of Fury: The Legend of Hank\n2022\n5.7\nA young dog who dreams of being a samurai faces prejudice and a steep learning curve when he's pulled into a plot to wipe a town of cats off the map.\n\n\nKiss, Kiss!\n2023\n7.5\nConvinced he can charm any woman, a tenacious flirt sets his sights on a headstrong bride-to-be engaged to the son of an ambitious politician.\n\n\nState of Grace\n1986\n7.2\nA socialist politician and a conservative businesswoman refuse to let differing beliefs — or a marriage — get in the way of their budding romance.\n\n\nTight Skirts, Loose Pleasures\n1965\nN/A\nWhen her client dies of a heart attack, a young sex worker meets an unlikely ally who wants to help her escape the clutches of a vengeful racketeer.\n\n\nThe Light We Carry: Michelle Obama and Oprah Winfrey\n2023\nN/A\nMichelle Obama delves into the challenges and life lessons that shaped her second bestselling book in an illuminating conversation with Oprah Winfrey.\n\n\nJohn Mulaney: Baby J\n2023\nN/A\nA chaotic intervention. An action packed stay in rehab. After a weird couple of years, John Mulaney comes out swinging in his return to the stage.\n\n\nMen of Deeds\n2022\n0\nAfter a police officer accidentally becomes an accomplice to a crime, he must decide whether to stand up to local corruption taking over his town.\n\n\n\n\n# Write the table to a CSV file\nwrite.csv(movies_df, file = \"netflix_movies.csv\", row.names = FALSE)\n\nChallenge 2\nScrape one of the competitor websites of canyon (either https://www.rosebikes.de/ or https://www.radon-bikes.de) and create a small database. The database should contain the model names and prices for at least one category. Use the selectorgadget to get a good understanding of the website structure, it is really helpful. After scraping your data, convert it to a readable format. Prices should be in a numeric format without any other letters or symbols. Also check if the prices are reasonable.\nI opted for radon-bikes.de I used the SelectorGadget extension from Chrome and the Inspect Tool to get the CSS elements I needed and I used regex to extract the main category and subcategories from the URLs. Then I used knitr and kable to get a nice table\n\n# WEBSCRAPING ----\n\n# 1.0 LIBRARIES ----\n\nlibrary(rvest)\nlibrary(knitr)\n\n# Define the URLs for each category and subcategory\nurls <- c(\n  \"https://www.radon-bikes.de/en/mountainbike/hardtail/\",\n  \"https://www.radon-bikes.de/en/mountainbike/fullsuspension/\",\n  \"https://www.radon-bikes.de/en/trekking-cross/trekking/\",\n  \"https://www.radon-bikes.de/en/trekking-cross/cross/\",\n  \"https://www.radon-bikes.de/en/e-bike/mountainbike/\",\n  \"https://www.radon-bikes.de/en/e-bike/trekking/\",\n  \"https://www.radon-bikes.de/en/roadbike/carbon/\",\n  \"https://www.radon-bikes.de/en/roadbike/alu/\",\n  \"https://www.radon-bikes.de/en/roadbike/gravel/\"\n)\n\n# Initialize an empty list to store the data for each category and subcategory\nbike_list <- list()\n\n# Iterate through each URL\nfor (url in urls) {\n\n  # Get the HTML content from the URL\n  html_content <- read_html(url)\n\n  # Extract the category and subcategory from the URL\n  category <- sub(\"^.*/([^/]+)/([^/]+)/?$\", \"\\\\1\", url)\n  subcategory <- sub(\"^.*/([^/]+)/([^/]+)/?$\", \"\\\\2\", url)\n\n  # Extract the bike names and prices from the HTML content\n  bike_names <- html_content %>% html_nodes(\".mod-serienpanel .a-heading--medium\") %>% html_text()\n  prices <- html_content %>%\n    html_nodes(\".info .currentPrice\") %>%\n    html_text()\n\n  # Remove any empty prices\n  prices <- prices[prices != \"\"]\n\n  # Create a data frame for the subcategory with the bike names and prices\n  subcategory_df <- data.frame(bike_name = bike_names[1:length(prices)], price = prices)\n\n  # Add the subcategory data frame to the bike_list with the corresponding category and subcategory names\n  bike_list[[paste0(category, \"_\", subcategory)]] <- subcategory_df\n\n}\n\n# Combine all the data frames in the bike_list into one data frame\nbike_df <- do.call(rbind, bike_list)\n\n# Add a column for the category and subcategory names\nbike_df$category <- gsub(\"_.*\", \"\", rownames(bike_df))\nbike_df$subcategory <- gsub(\".*_\", \"\", rownames(bike_df))\n\n# Reorder the columns\nbike_df <- bike_df[,c(3,4,1,2)]\n\n# Print the resulting data frame\n# bike_df\n\n# Display dataframe as a table using kable()\nbike_table <- kable(bike_df, format = \"markdown\", booktabs = TRUE, align = \"c\", col.names = toupper(colnames(bike_df)), space = \"small\", row.names=FALSE)\n\nbike_table\n\n\n\nCATEGORY\nSUBCATEGORY\nBIKE_NAME\nPRICE\n\n\n\nmountainbike\nhardtail.1\nJEALOUS\n2520.17\n\n\nmountainbike\nhardtail.2\nJEALOUS AL\n1007.56\n\n\nmountainbike\nhardtail.3\nCRAGGER\n1175.63\n\n\nmountainbike\nhardtail.4\nZR TEAM\n629.41\n\n\nmountainbike\nhardtail.5\nZR LADY\n503.36\n\n\nmountainbike\nhardtail.6\nSLUSH Frameset\n251.26\n\n\nmountainbike\nfullsuspension.1\nSKEEN TRAIL AL\n1427.73\n\n\nmountainbike\nfullsuspension.2\nSKEEN TRAIL\n1931.93\n\n\nmountainbike\nfullsuspension.3\nSLIDE TRAIL AL\n1478.15\n\n\nmountainbike\nfullsuspension.4\nSLIDE TRAIL\n2520.17\n\n\nmountainbike\nfullsuspension.5\nJAB\n2184.03\n\n\nmountainbike\nfullsuspension.6\nSWOOP AL\n2520.17\n\n\nmountainbike\nfullsuspension.7\nSWOOP\n2352.1\n\n\ntrekking-cross\ntrekking.1\nSOLUTION COMFORT\n587.39\n\n\ntrekking-cross\ntrekking.2\nSUNSET\n1259.66\n\n\ntrekking-cross\ncross\nSCART LIGHT\n503.36\n\n\ne-bike\nmountainbike.1\nRENDER AL\n3360.5\n\n\ne-bike\nmountainbike.2\nRENDER\n4200.84\n\n\ne-bike\nmountainbike.3\nDEFT\n4032.77\n\n\ne-bike\nmountainbike.4\nJEALOUS HYBRID\n2100\n\n\ne-bike\nmountainbike.5\nZR TEAM HYBRID CX\n1427.73\n\n\ne-bike\nmountainbike.6\nZR LADY HYBRID CX\n1931.93\n\n\ne-bike\ntrekking.1\nRELATE\n2688.24\n\n\ne-bike\ntrekking.2\nSOLUTION HYBRID\n1931.93\n\n\nroadbike\ncarbon.1\nSPIRE DISC CARBON\n1763.87\n\n\nroadbike\ncarbon.2\nVAILLANT DISC CARBON\n2688.24\n\n\nroadbike\nalu\nR1\n1091.6\n\n\nroadbike\ngravel\nREGARD\n1091.6\n\n\n\n\n\nWhether or not the prices are reasonable depends entirely on the person 99% of the time, but if we were to compare the prices of the bikes from all those categories to the price range of similar bikes from other sources in Germany, then the prices are entirely reasonable.\nAverage prices in Germany in EUR for different categories:\n\nMountain Bikes: 500-3000€ [2]\nE-Bikes: 1000-4000€ [1]\nTrekking and Cross bikes: 500-2000€ [2]\nRoad Bikes: 1000-3000€ [1]\n\n\nBicycles and MTBs designed in Germany | GHOST bikes. https://www.ghost-bikes.com/int-en/bikes/.\nBike E-Bike Online Shop | Bike-Discount. https://www.bike-discount.de/en/ebike.\nWe’ve got your Bike | RABE Bike. https://www.rabe-bike.de/en.\n\nBased on this information, we can say definitively that the prices for the various bikes across all categories on radon-bikes.de are reasonable.\nEnd of Data Acquisition Challenge"
  },
  {
    "objectID": "content/01_journal/03_data_wrangling.html",
    "href": "content/01_journal/03_data_wrangling.html",
    "title": "Data Wrangling",
    "section": "",
    "text": "Challenge\nPatents offer a great opportunity for data analysis, because the data is public. PatentsView is one of USPTO’s (United States Patent and Trademark Office) new initiatives intended to increase the usability and value of patent data\nPlease note, that the patent data provided by the USPTO is a very large data set that might overload your computer power. Therefore, we also provide a reduced data set that is filtered to the year 2014 only with less columns, so you are able to complete the task, if your computer can’t process the large original data file.\nAlternative 1: The original USPTO data can be downloaded here: https://patentsview.org/download/data-download-tables\nAlternative 2: The reduced data set for the year 2014 can be downloaded here. https://cloud.tuhh.de/index.php/s/sGZKmdfLfdZBFK9\nInformation about the data will be found here: Patents_DB_dictionary_bulk_downloads.xlsx\n1) Patent Dominance: What US company / corporation has the most patents? List the 10 US companies with the most assigned/granted patents.\n2) Recent patent activity: What US company had the most patents granted in August 2014? List the top 10 companies with the most new granted patents for August 2014.\n3) Innovation in Tech: What is the most innovative tech sector? For the top 10 companies (worldwide) with the most patents, what are the top 5 USPTO tech main classes?\nAnswer the question with data.table or dplyr. You will need the following tables for each question:\nQuestion Table 1 assignee,patent_assignee 2 assignee,patent_assignee,patent 3 assignee,patent_assignee,uspc\nPlease note, that it is better to not upload the tables to your github repo due to their size.\n\n# Data Wrangling\n\n# Import libraries\nlibrary(data.table)\nlibrary(knitr)\n\n# Import data\nassignee <- fread(\"C:\\\\Users\\\\fvsha\\\\Documents\\\\GitHub\\\\ss23-bdsb-VictorReaver1999\\\\patent_data_reduced\\\\assignee.tsv\")\npatent_assignee <- fread(\"C:\\\\Users\\\\fvsha\\\\Documents\\\\GitHub\\\\ss23-bdsb-VictorReaver1999\\\\patent_data_reduced\\\\patent_assignee.tsv\")\npatent <- fread(\"C:\\\\Users\\\\fvsha\\\\Documents\\\\GitHub\\\\ss23-bdsb-VictorReaver1999\\\\patent_data_reduced\\\\patent.tsv\")\nuspc <- fread(\"C:\\\\Users\\\\fvsha\\\\Documents\\\\GitHub\\\\ss23-bdsb-VictorReaver1999\\\\patent_data_reduced\\\\uspc.tsv\")\n\n\n# Question 1\n\n\n# Merge assignee and patent_assignee tables\nassignee_patent <- merge(assignee, patent_assignee, by.x = \"id\", by.y = \"assignee_id\")\n\n# Filter for US corporations only\nus_corp_patents <- assignee_patent[type == 2, .(num_patents = .N), by = organization]\n\n# Sort in descending order\nus_corp_patents <- us_corp_patents[order(-num_patents)]\n\n# Display the top 10 companies with the most patents\nus_corp_patents_10 <- us_corp_patents[1:10]\nkable(us_corp_patents_10, align=\"c\", caption=\"Top 10 US Companies by Patents\")\n\n\nTop 10 US Companies by Patents\n\norganization\nnum_patents\n\n\n\nInternational Business Machines Corporation\n7547\n\n\nMicrosoft Corporation\n3165\n\n\nGoogle Inc.\n2668\n\n\nQUALCOMM Incorporated\n2597\n\n\nApple Inc.\n2201\n\n\nGeneral Electric Company\n1873\n\n\nHewlett-Packard Development Company, L.P.\n1638\n\n\nAT&T INTELLECTUAL PROPERTY I, L.P.\n1625\n\n\nIntel Corporation\n1616\n\n\nGM Global Technology Operations LLC\n1533\n\n\n\n\n# Question 2\n\n\n# Merge the patent_assignee and patent tables\npatent_merged <- merge(patent, patent_assignee, by.x = \"id\", by.y = \"patent_id\")\n\n# Extract the year and month from the date column\npatent_merged[, `:=`(year = year(date), month = month(date))]\n\n# Filter for August 2014\npatent_aug_2014 <- patent_merged[year == 2014 & month == 8]\n\n# Merge the assignee and patent_aug_2014 tables\nassignee_patent_aug_2014 <- merge(assignee, patent_aug_2014, by.x = \"id\", by.y = \"assignee_id\")\n\n# Filter for US corporations only\nus_corp_patents_aug_2014 <- assignee_patent_aug_2014[type == 2]\n\n# Count the number of patents for each organization\nnum_patents_aug_2014 <- us_corp_patents_aug_2014[, .(num_patents = .N), by = organization]\n\n# Sort in descending order\ntop_10_patents_aug_2014 <- num_patents_aug_2014[order(-num_patents)][1:10]\n\n# Display the top 10 companies with the most patents granted in August 2014\nkable(top_10_patents_aug_2014, align=\"c\", caption=\"Top 10 US Companies by Patents in August of 2014\")\n\n\nTop 10 US Companies by Patents in August of 2014\n\norganization\nnum_patents\n\n\n\nInternational Business Machines Corporation\n718\n\n\nMicrosoft Corporation\n337\n\n\nGoogle Inc.\n240\n\n\nQUALCOMM Incorporated\n223\n\n\nApple Inc.\n222\n\n\nIntel Corporation\n159\n\n\nGeneral Electric Company\n148\n\n\nAT&T INTELLECTUAL PROPERTY I, L.P.\n146\n\n\nHewlett-Packard Development Company, L.P.\n140\n\n\nGM Global Technology Operations LLC\n138\n\n\n\n\n# Question 3\n\n\n# Count the number of patents for each assignee\nassignee_count <- patent_assignee[, .N, by = assignee_id]\n\n# Merge assignee and assignee_count to get the number of patents for each assignee\nassignee_count <- merge(assignee, assignee_count, by.x = \"id\", by.y = \"assignee_id\")\n\n# Filter for only the Corporations\nassignee_count <- assignee_count[type %in% c(2, 3)]\n\n# Join assignee_count and patent_assignee to get the number of patents for each US corporation/individual\npatent_count <- merge(assignee_count, patent_assignee, by.x = \"id\", by.y = \"assignee_id\")\n\n# Join patent_count and uspc to get the main class for each patent\npatent_class <- merge(patent_count, uspc, by = \"patent_id\")\n\n# Count the number of patents for each organization and sort by the number of patents\ncompany_count <- patent_class[, .N, by = c(\"type\", \"organization\")]\ncompany_count <- company_count[type %in% c(2, 3)]\ncompany_count <- company_count[order(-N)]\n\n# Select the top 10 companies\ntop_companies <- company_count[1:10]\n\n# Filter patent_class for the top 10 companies\npatent_class_top <- patent_class[patent_class$organization %in% top_companies$organization]\n\n# Count the number of patents for each main class and sort by the number of patents\nclass_count <- patent_class_top[, .N, by = mainclass_id]\nclass_count <- class_count[order(-N)]\n\n# Select the top 5 main classes\ntop_classes <- class_count[1:5]\n\n# Order the patent_class by the number of patents for each company\npatent_class_ordered <- patent_class_top[order(-patent_class_top$N), ]\n\n# Print the top 10 companies with the most patents and the top 5 main classes for these companies\nkable(top_companies, align=\"c\", caption=\"Top 10 Companies Worlwide by Total Patents\")\n\n\nTop 10 Companies Worlwide by Total Patents\n\ntype\norganization\nN\n\n\n\n2\nInternational Business Machines Corporation\n19056\n\n\n3\nSamsung Electronics Co., Ltd.\n14523\n\n\n3\nCanon Kabushiki Kaisha\n9467\n\n\n3\nSony Corporation\n8372\n\n\n2\nQUALCOMM Incorporated\n7322\n\n\n2\nMicrosoft Corporation\n7195\n\n\n3\nKabushiki Kaisha Toshiba\n6957\n\n\n2\nGoogle Inc.\n6082\n\n\n3\nLG Electronics Inc.\n5694\n\n\n3\nPanasonic Corporation\n5641\n\n\n\n\nprint(paste(\"The 5 main USPTO classes for the Top 10 Companies Worldwide are:\", paste(top_classes$mainclass_id, collapse = \", \")))\n\n#> [1] \"The 5 main USPTO classes for the Top 10 Companies Worldwide are: 257, 455, 370, 348, 709\"\n\n\nThe main classes correspond to the following industries as per the USPTO:\n\nMainclass_id 257: ACTIVE SOLID-STATE DEVICES (E.G., TRANSISTORS, SOLID-STATE DIODES)¹. This class covers devices that operate by the movement of charge carriers in solid materials, such as semiconductors. The industry related to this mainclass_id is the electronics industry, especially for applications involving rectification, amplification, or switching of electrical signals².\nMainclass_id 455: TELECOMMUNICATIONS³. This class covers devices and methods for transmitting and receiving information by electromagnetic waves, such as radio, microwave, or optical signals. The industry related to this mainclass_id is the telecommunications industry, especially for applications involving wireless communication, broadcasting, or modulation of signals.\nMainclass_id 370: MULTIPLEX COMMUNICATIONS. This class covers devices and methods for transmitting and receiving multiple signals over a single communication channel or medium, such as time division multiplexing, frequency division multiplexing, or code division multiplexing. The industry related to this mainclass_id is also the telecommunications industry, especially for applications involving efficient use of bandwidth, network protocols, or error correction of signals.\nMainclass_id 348: TELEVISION. This class covers devices and methods for transmitting and receiving images by electromagnetic waves or other means, such as video cameras, monitors, projectors, or video signal processing. The industry related to this mainclass_id is the entertainment industry, especially for applications involving broadcasting, recording, or displaying of video content.\nMainclass_id 709: ELECTRICAL COMPUTERS AND DIGITAL PROCESSING SYSTEMS: MULTICOMPUTER DATA TRANSFERRING. This class covers devices and methods for transferring data between multiple computers or processors in a networked system, such as routers, switches, servers, or distributed computing. The industry related to this mainclass_id is the information technology industry, especially for applications involving data communication, network architecture, or cloud computing.\n\nSources: (1) Class Schedule for Class 257 ACTIVE SOLID-STATE DEVICES (E.G …. https://www.uspto.gov/web/patents/classification/uspc257/sched257.htm. (2) Class Definition for Class 257 - ACTIVE SOLID-STATE DEVICES (E.G …. https://www.uspto.gov/web/patents/classification/uspc257/defs257.htm. (3) Class 257: ACTIVE SOLID-STATE DEVICES (E.G., TRANSISTORS, SOLID-STATE …. https://www.uspto.gov/web/offices/ac/ido/oeip/taf/moc/257.htm."
  },
  {
    "objectID": "content/01_journal/04_data_visualization.html",
    "href": "content/01_journal/04_data_visualization.html",
    "title": "Data Visualization",
    "section": "",
    "text": "Note\n\n\n\nYou can delete everything in here and start fresh."
  },
  {
    "objectID": "content/02_notes/05_class_notes.html",
    "href": "content/02_notes/05_class_notes.html",
    "title": "Class Notes",
    "section": "",
    "text": "IMPORTANT: You can delete everything in here and start fresh. You might want to start by not deleting anything above this line until you know what that stuff is doing.\nThis is an .qmd file. It is plain text with special features. Any time you write just like this, it will be compiled to normal text in the website. If you put a # in front of your text, it will create a top level-header."
  },
  {
    "objectID": "content/03_other/06_links.html",
    "href": "content/03_other/06_links.html",
    "title": "Links",
    "section": "",
    "text": "R is a free open-source programming language that can be used for statistical analysis, data-simulation, graphing, and lots of other stuff. Another free program is R-studio, that provides a nice graphic interface for R. Download R first, then download R-studio. Both can run on PCs, Macs or Linux. Students will be learning R in the stats labs using the lab manual .\n\n\n\n\nGoogle is great, Google your problem\nStackoverflow is great, google will often take you there because someone has already asked your question, and someone else has answered, usually many people have answered your question many ways."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Data Science Journal",
    "section": "",
    "text": "This is my data science journal where you will see the code and results of various projects or tasks.\nThere are 5 parts to it in total.\n1 - Tidyverse Introduction + Challenge\n2 - Data Acquisition + Challenge\n3 - Data Wrangling + Challenge\n4 - Data Visualization + Challenge"
  }
]